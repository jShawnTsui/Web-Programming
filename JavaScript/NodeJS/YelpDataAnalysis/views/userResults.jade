extend layout
block content
  h2 USER RESULTS
  p
    table(class="table table-bordered table-hover")
      tr(class='error')
        th Business Name
        th Stars
        th Review Count
        th Address
        th City
        th Distance
      - for (var inx = 0; inx < results.length; inx++)
        tr(class=(inx%4==0)?'success':((inx%4==1)?'error':((inx%4==2)?'warning':'info')))
          td=results[inx][0]
          td=Number(results[inx][1]).toFixed(2)
          td=results[inx][2]
          td=results[inx][3]
          td=results[inx][4]
          td=Number(results[inx][7]).toFixed(2)

  #chart(style='width: 500px; height: 400px; float:left;')
  #map(style='width:500px;height:400px; float:right;')
  // Put a click button that lets us return to the mywork page 
  p
    form(method='get', action='/user')
      input(type='submit', value='Return' class="btn btn-success")
  script(type='text/javascript', src='https://www.gstatic.com/charts/loader.js')
  script.
    google.charts.load('current', {'packages':['corechart']});
    google.charts.setOnLoadCallback(drawChart);
    function drawChart() {
      var info = [[]];
      info[0][0] = 'Business Name';
      info[0][1] = 'Popularity';
      info[0][2] = {role: 'style'};
      color = ['plum','gold','turquoise','violet','skyblue'];
      var results = '!{results.join(';').replace(new RegExp("'", 'g'),"")}'.split(';');
      var temp_result = [];
      for (var inx = 0; inx < results.length; inx++){
        var result = results[inx].split(',');
        temp_result[inx] = parseFloat(result[2]);
      }
      var max = Math.max(...temp_result);
      console.log(max);
      for (var inx = 0; inx < results.length; inx++){
        info[inx+1] = [];
        var result = results[inx].split(',');
        info[inx+1][0] = result[0];
        info[inx+1][1] = parseFloat(result[1])*parseFloat(result[2])*2.5/max;
        info[inx+1][2] = color[inx%5];
      }
      var data = google.visualization.arrayToDataTable(info);

      var options = {
        legend:'none',
        backgroundColor: 'transparent',
        title: 'Review Number over Business',
        chartArea: {width: '70%'},
        hAxis: {
          title: 'Business Name',
          minValue: 0
        },
        vAxis: {
          title: 'Review'
        }
      };

      var chart = new google.visualization.ColumnChart(document.getElementById('chart'));

      chart.draw(data, options);
    }
  script.
    var map, infoWindow, i, marker;
    var markers = [];
    var locations = [[]];
    var results = '!{results.join(';').replace(new RegExp("'", 'g'),"")}'.split(';');
    for (var inx = 0; inx < results.length; inx++){
      locations[inx] = [];
      var result = results[inx].split(',');
      locations[inx][0] = result[0];
      locations[inx][1] = parseFloat(result[result.length-3]);
      locations[inx][2] = parseFloat(result[result.length-2]);
      locations[inx][3] = inx.toString();
    }
    function initMap() {
      map = new google.maps.Map(document.getElementById('map'), {
        center: {lat: 37, lng: -95},
        zoom: 4
      });
      infoWindow = new google.maps.InfoWindow;
      markersDisplay();

    }
    
    function markersDisplay(){
      var markers = [];
      for (i = 0; i < locations.length; i++) {
        marker = new google.maps.Marker({
          position: new google.maps.LatLng(locations[i][1], locations[i][2]),
          label: locations[i][3].toString(),
          map: map
        });
        google.maps.event.addListener(marker, 'click', (function(marker, i)
        {
          return function() {
          infoWindow.setContent(locations[i][0]);
          infoWindow.open(map, marker);
          }  
        })(marker, i));
        markers[i] = marker;
      }
      var markerCluster = new MarkerClusterer(map, markers, {imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'});
    }

  script(src="https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js")
  script(async='', defer='', src='https://maps.googleapis.com/maps/api/js?key=AIzaSyAvzrl10zPvnd7uRMlQTpuih987tVzIrhI&callback=initMap')
